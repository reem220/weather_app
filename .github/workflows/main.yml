name: Weather App CI/CD

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: reem2244/weather-app

jobs:
  app-build:
    name: Build and Package App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Package Node.js app
        run: |
          npm pack
          mv *.tgz app.tgz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-package
          path: app.tgz

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: app-build

    steps:
      - name: Download app artifact
        uses: actions/download-artifact@v3
        with:
          name: app-package
          path: app-package

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app-package
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.run_number }}

  deploy:
    name: Deploy Container on VM
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: SSH to VM and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Remove old latest image (if exists)..."
            docker rmi -f ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest || true

            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest

            echo "Stopping old container..."
            docker stop nodeapp || true
            docker rm nodeapp || true

            echo "Starting new container..."
            docker run -d -p 80:3000 --name nodeapp ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest

            echo "Starting new container..."
            docker run -d -p 5000:5000 --name weather-app ${{ env.IMAGE_NAME }}:${{ github.run_number }}
