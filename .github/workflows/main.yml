name: Weather App CI/CD

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: reem2244/weather-app

jobs:
  app-build:
    name: Build and Package App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Package Node.js app
        run: |
          npm pack
          mv *.tgz app.tgz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-package
          path: app.tgz

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: app-build

    steps:
      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: app-package
          path: app-package

      - name: Extract app artifact
        run: |
          mkdir -p app-package/src
          tar -xzf app-package/app.tgz -C app-package/src --strip-components=1

      - name: Checkout repo (for Dockerfile)
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (no cache)
        uses: docker/build-push-action@v6
        with:
          context: ./app-package/src
          file: ./Dockerfile
          push: true
          no-cache: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy Container on VM
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: SSH to VM and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Remove old container if running..."
            docker stop weather-app || true
            docker rm weather-app || true

            echo "Pulling latest image..."
            docker pull ${{ env.IMAGE_NAME }}:latest

            echo "Starting new container (weather-app)..."
            docker run -d -p 5000:5000 --name weather-app ${{ env.IMAGE_NAME }}:latest
